{
    "files.associations": {
        "*.h": "c",
        "random": "c",
        "array": "c",
        "string": "c",
        "string_view": "c",
        "ratio": "c",
        "system_error": "c",
        "functional": "c",
        "tuple": "c",
        "type_traits": "c",
        "utility": "c"
    },
    "editor.formatOnPaste": false,
    "editor.formatOnType": false,
    "editor.formatOnSave": false,
    "terminal.integrated.profiles.linux": {
        "bash": {
            "path": "bash",
            "icon": "terminal-bash",
            "args": [
                "-i"
            ]
        }
    },
    "C_Cpp.errorSquiggles": "enabled",
    "languageServerPoryscript.commandIncludes": [
        "asm/macros/event.inc",
        "asm/macros/movement.inc"
    ],
    "languageServerPoryscript.symbolIncludes": [
        {
            "expression": "^\\s*def_special\\s+(\\w+)",
            "type": "special",
            "file": "data/specials.inc"
        },
        {
            "expression": "^\\s*#define\\s+(SPECIES_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/species.h"
        },
        {
            "expression": "^\\s*(\\w+):", // Match newline then any num of spaces(eg. tabs), then capture any number of letters before the colon
            "type": "define",
            "file": "data/scripts/movement.inc"
        },
        {
            "expression": "^\\s*#define\\s+(\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/global.h"
        },
        {
            "expression": "^\\s*#define\\s+(OBJ_EVENT_ID_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/event_objects.h"
        },
        {
            "expression": "^\\s*#define\\s+(MAP_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/map_groups.h"
        },
        {
            "expression": "^\\s*#define\\s+(FLAG_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/flags.h"
        },
        {
            "expression": "^\\s*#define\\s+(VAR_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/vars.h"
        },
        {
            "expression": "^\\s*#define\\s+(ITEM_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/items.h"
        },
        {
            "expression": "^\\s*#define\\s+(SE_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/songs.h"
        },
        {
            "expression": "^\\s*#define\\s+(MUS_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/songs.h"
        },
        {
            "expression": "^\\s*#define\\s+(CRY_MODE_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/sound.h"
        },
        {
            "expression": "^\\s*#define\\s+(FANFARE_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/sound.h"
        },
        {
            "expression": "^\\s*#define\\s+(MAP_SCRIPT_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/map_scripts.h"
        },
        {
            "expression": "^\\s*#define\\s+(DYN_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/script_menu.h"
        },
        {
            "expression": "^\\s*#define\\s+(MULTI_B_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/script_menu.h"
        },
        {
            "expression": "^\\s*#define\\s+(SPECIES_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/species.h"
        },
        {
            "expression": "^\\s*#define\\s+(B_OUTCOME_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/battle.h"
        },
        {
            "expression": "^\\s*#define\\s+(WEATHER_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/weather.h"
        },
        {
            "expression": "^\\s*#define\\s+(FADE_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/field_weather.h"
        },
        {
            "expression": "^\\s*(B_TRANSITION_\\w+),",
            "type": "define",
            "file": "include/battle_transition.h"
        },
        {
            "expression": "^\\s*#define\\s+(TRAINER_\\w+)\\s+(.+)",
            "type": "define",
            "file": "include/constants/opponents.h"
        },
    ],
    "bookmarks.saveBookmarksInProject": true,
    "cmake.configureOnOpen": false,
    "makefile.configureAfterCommand": false,
    "makefile.configureOnEdit": false,
    "makefile.configureOnOpen": false,
    "makefile.buildBeforeLaunch": false
}